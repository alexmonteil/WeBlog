@using Microsoft.AspNetCore.Identity
@using WeBlog.Enums;
@model WeBlog.Models.Post
@inject WeBlog.Services.Interfaces.IImageService imageService
@inject UserManager<BlogUser> userManager

@{
    ViewData["Title"] = "Details";
}


@if (User.IsInRole("Administrator"))
{
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <a id="adminPills" class="badge bg-success text-decoration-none"
                asp-action="Edit"
                asp-controller="Posts"
                asp-route-id="@Model.Id">Edit Post</a>

                <a id="adminPills" class="badge bg-danger text-decoration-none"
                asp-action="Delete"
                asp-controller="Posts"
                asp-route-id="@Model.Id">Delete Post</a>
            </div>
        </div>
    </div>
        
}

<!-- Post Content-->
<article class="mb-4">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5">
            <div class="col-12 col-md-4">
                <a id="adminPills" class="badge bg-dark text-decoration-none"
                    asp-action="BlogPostIndex"
                    asp-controller="Posts"
                    asp-route-id="@Model.BlogId">Return to Post List</a>
            </div>
        </div>
        <div class="row gx-4 gx-lg-5 justify-content-center text-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                @Html.Raw(Model.Content)
            </div>
        </div>
    </div>
</article>

<hr />

<article>
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5">
            <div class="col text-center fw-bold h3">
                Custom Post Tags
            </div>
            <div class="row gx-4 gx-lg-5">
                <div class="col text-center">
                    @foreach(var tag in Model.Tags)
                    {
                        <a class="btn btn-warning btn-sm btn-outline-dark" asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()">#@tag.Text</a>
                    }
                </div>
            </div>
        </div>
    </div>
</article>

<hr />

<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5">
        <div class="col">
            <div class="mb-2 p-0">
                <small id="commentSection">
                    @Model.Comments.Count comment(s)
                </small>
            </div>
        </div>
    </div>
</div>

<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5">
        <div class="col">
            @if(User.Identity.IsAuthenticated)
            {
                <form asp-controller="Comments" asp-action="Create" method="POST">
                    @Html.Hidden("PostId", Model.Id)
                    @Html.Hidden("Slug", Model.Slug)
                    <div class="form-group">
                        <label class="h2 control-label fw-bold">Add Comment</label>
                        <textarea name="body" class="form-control" rows="10" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-dark btn-sm">Submit</button>
                </form>
            } 
            else
            {
               <a class="btn btn-sm btn-dark" asp-area="Identity" asp-page="/Account/Login" asp-route-ReturnUrl="/Posts/Details?slug=@Model.Slug">
                    Login to add comments    
               </a> 
            }
        </div>
    </div>
    <hr />

    @foreach(var comment in Model.Comments.OrderByDescending(c => c.Created)) 
    {
        <div class="row mt-2 gx-4 gx-lg-5">
            <div class="col">
                <div class="media media-border p-0 bg-light">
                    <img class="me-3 mt-3 rounded-circle" style="width: 60px;" src="@imageService.DecodeImage(comment.BlogUser.ImageData, comment.BlogUser.ContentType)" />
                    <div class="media-body">
                        <h4>@comment.BlogUser.DisplayName</h4>
                    
                        @* SECTION 1 : Status and dates *@
                        
                        @if(comment.Deleted is not null)
                        {
                            <span class="small fst-italic">Deleted on @comment.Deleted?.ToString("MMM dd, yyyy")</span>
                        }
                        else if(comment.Moderated is not null)
                        {
                            <span class="small">
                                <span class="fw-bolder">
                                    Moderated for reason: <span class="text-danger fst-italic">@comment.ModerationType.ToString()</span>
                                </span>
                                on @comment.Moderated?.ToString("MMM dd, yyyy")
                            </span>
                        }
                        else if (comment.Updated is not null)
                        {
                            <span class="small fst-italic">Updated on @comment.Updated?.ToString("MMM dd, yyyy")</span>
                        }
                        else
                        {
                            <span class="small fst-italic">Posted on @comment.Created.ToString("MMM dd, yyyy")</span>   
                        }
                    
                        <br/>

                        @* SECTION 2 : Render pre text *@

                        @if (comment.Deleted is not null)
                        {
                            <span class="small fst-italic">The comment posted on @comment.Created.ToString("MMM dd, yyyy") by @comment.BlogUser.DisplayName was deleted by the Moderator...</span>
                        }
                        else if (comment.Moderated is not null)
                        {
                            <span class="small fst-italic">The comment posted on @comment.Created.ToString("MMM dd, yyyy") by @comment.BlogUser.DisplayName has been Moderated...</span>
                        }

                        <hr />

                        @* SECTION 3 : Render main body *@

                        @if (string.IsNullOrEmpty(comment.Body))
                        {
                            <span class="small fst-italic">Comment not available...</span>
                        }
                        else if (comment.Moderated is not null)
                        {
                            <p>@comment.ModeratedBody</p>
                        }
                        else if (comment.Deleted is null)
                        {
                            <p>@comment.Body</p>
                        }

                        @* SECTION 4 : Can we render the edit button ? *@

                        @if(comment.Moderated is null && comment.Deleted is null && comment.BlogUserId == userManager.GetUserId(User))
                        {
                            <button data-bs-toggle="modal" data-bs-target="#editModal_@comment.Id" class="btn btn-sm btn-dark float-end fw-bold">Edit</button>
                        }
                    
                        @* SECTION 5 : Can we render the moderate and delete buttons ? *@

                        @if((User.IsInRole(BlogRole.Moderator.ToString()) || User.IsInRole(BlogRole.Administrator.ToString())) && comment.Deleted is null)
                        {
                            <div class="row g-0">
                                <div class="col-2">
                                    <div class="d-grid gap-2">
                                        <button class="btn btn-sm btn-dark fw-bold" data-bs-toggle="modal" data-bs-target="#moderateModal_@comment.Id">Moderate</button>
                                    </div>
                                </div>
                                <div class="col-2 ms-2">
                                    <form asp-controller="Comments" asp-action="Delete">
                                        @Html.Hidden("Id", comment.Id)
                                        @Html.Hidden("Slug", Model.Slug)
                                        <div class="d-grid gap-2">
                                            <button class="btn btn-sm btn-dark fw-bold">Delete</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    


        @* Edit Modal *@
        <div class="modal" id="editModal_@comment.Id">
            <div class="modal-dialog">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Editing Comment...</h4>
                    </div>
                    <!-- Modal Body -->
                    <div class="modal-body">
                        <form asp-controller="Comments" asp-action="Edit">
                            @Html.Hidden("Id", comment.Id)
                            <div class="form-group">
                                <textarea name="Body" class="form-control" required>@comment.Body</textarea>
                            </div>
                            <button class="btn btn-sm btn-dark border-success fw-bold mt-2" type="submit">Submit</button>
                        </form>
                    </div>

                    <!-- Modal Footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-sm btn-dark fw-bold" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        @* Moderate Modal *@
        <div class="modal" id="moderateModal_@comment.Id">
            <div class="modal-dialog">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Moderating Comment...</h4>
                    </div>
                    <!-- Modal Body -->
                    <div class="modal-body">
                        <form asp-controller="Comments" asp-action="Moderate">
                            @Html.Hidden("Id", comment.Id)
                            @Html.Hidden("Body", comment.Body)
                            <div class="form-group">
                                <label class="control-label">Original Comment</label>
                                <textarea name="Body" class="form-control" disabled style="resize: none;">@comment.Body</textarea>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Moderated Comment</label>
                                <textarea name="ModeratedBody" class="form-control" required>@comment.ModeratedBody</textarea>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Reason for moderation</label>
                                <select class="form-control" asp-for="@comment.ModerationType" name="ModerationType" asp-items="@Html.GetEnumSelectList<ModerationType>()"></select>
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col">
                                        <button class="btn btn-sm btn-dark border-success fw-bold" type="submit">Submit</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>

                    <!-- Modal Footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-sm btn-dark fw-bold" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

    }
</div>
